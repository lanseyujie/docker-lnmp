server {
  listen 80;
  # listen 443 ssl http2;
  server_name localhost;

  # ssl_certificate /etc/nginx/ssl/fullchain.cer;
  # ssl_certificate_key /etc/nginx/ssl/cert.key;
  # ssl_protocols TLSv1.2 TLSv1.3;
  # ssl_ciphers TLS13-AES-256-GCM-SHA384:TLS13-CHACHA20-POLY1305-SHA256:TLS13-AES-128-GCM-SHA256:TLS13-AES-128-CCM-8-SHA256:TLS13-AES-128-CCM-SHA256:EECDH+CHACHA20:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5;
  # ssl_prefer_server_ciphers on;
  # ssl_buffer_size 1400;

  # ssl_session_cache shared:SSL:10m;
  # ssl_session_timeout 10m;
  # ssl_session_tickets on;
  # note: openssl rand 48 > /etc/nginx/ssl/session_ticket.key
  # ssl_session_ticket_key /etc/nginx/ssl/session_ticket.key;

  # note: openssl s_client -connect example.com:443 -status -tlsextdebug < /dev/null 2>&1 | grep -i "OCSP response"
  # ssl_stapling on;
  # ssl_stapling_verify on;
  # ssl_trusted_certificate /etc/nginx/ssl/fullchain.cer;
  # resolver 8.8.4.4 8.8.8.8 valid=300s;
  # resolver_timeout 10s;

  # note: openssl dhparam -out /etc/nginx/ssl/dhparam.pem 4096
  # ssl_dhparam /etc/nginx/ssl/dhparam.pem;

  charset utf-8;
  access_log /var/log/nginx/access.log combined;

  root /data/default;
  index index.html index.htm index.php;

  # if ($request_method !~ ^(GET|HEAD|POST|OPTIONS)$) {
  #   return 444;
  # }

  # if ($query_string ~* ^http(.*)$) {
  #  return 444;
  # }

  # if ($scheme = "http") {
  #   return 301 https://$server_name$request_uri;
  # }

  # note: HSTS (31536000 seconds = 12 months)
  # add_header Strict-Transport-Security "max-age=31536000; preload";
  # add_header Cache-Control "no-cache, must-revalidate, max-age=60";
  # add_header X-Content-Type-Options nosniff;
  # add_header X-Frame-Options SAMEORIGIN;
  # add_header Content-Security-Policy "default-src 'self'; script-src 'unsafe-inline':; style-src 'unsafe-inline'; img-src data:; media-src *;"
  # fastcgi_hide_header X-Powered-By;

  # error_page 404 /404.html;
  # error_page 500 501 502 503 504 @errpage;
  # location @errpage {
  #   default_type text/html;
  #   return 200 'Some Errors Occurred';
  # }

  # location / {
  #   try_files $uri $uri/ /index.php$is_args$args;
  # }

  # location / {
  #   satisfy any;
  #
  #   allow 192.168.1.1/24;
  #   deny all;
  #
  #   auth_basic "username";
  #   # htpasswd -cm /etc/nginx/passwd username
  #   auth_basic_user_file /etc/nginx/passwd;
  #
  #   autoindex on;
  #   autoindex_exact_size off;
  #   autoindex_localtime on;
  # }

  # location / {
  #   proxy_connect_timeout 20;
  #   proxy_read_timeout 30;
  #   proxy_send_timeout 30;
  #   send_timeout 30;
  #   proxy_redirect off;
  #   proxy_set_header Host $host;
  #   proxy_set_header X-Real-IP $remote_addr;
  #   proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  #   proxy_ssl_server_name on;
  #   proxy_pass https://www.example.com;
  #   proxy_intercept_errors on;
  # }

  location /nginx_status {
    stub_status on;
    access_log off;
    allow 127.0.0.1;
    deny all;
  }

  # location ~ [^/]\.php(/|$) {
      # note: comment here if you use path info
  #   try_files  $uri =404;

  #   fastcgi_pass php:9000;
  #   fastcgi_index index.php;
  #   include /etc/nginx/fastcgi.conf;
  # }

  location ~ .*\.(gif|jpg|jpeg|png|webp|bmp|ico|svg|mp3|mp4|mkv)$ {
    # valid_referers none blocked server_names ~\.google\. ~\.baidu\.;
    # if ($invalid_referer) {
    #     return 403;
    #     # rewrite ^/ http://domain/forbidden.png;
    # }

    expires 30d;
    access_log off;
  }

  location ~ .*\.(js|css)?$ {
    expires 30d;
    access_log off;
  }

  location ~.*.mp4$ {
    mp4;
  }

  # location /download {
  #   internal;
  #   # alias /data/download;
  #   secure_link $arg_token,$arg_expires;
  #   secure_link_md5 "$secure_link_expires$uri$remote_addr mySecret";
  #   if ($secure_link = "") { return 403; }
  #   if ($secure_link = "0") { return 410; }
  # }

  location ~ /\. {
    deny all;
  }
}
